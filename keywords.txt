1. Given def <variable_name> = "<value>"
2. * def <variable_name> = response
3. * def <variable_name> = response.<json_path>
4. * def variable_name = variable_value(“feature_name.feature”) - step to share the variable
5. * call variable_name - step to call and use the variable
6. Given endpoint "<url>"
7. Given queryParam <query_param_name> = "<query_param_value>"
8. GIven queryParam query_param_name = variable_name
9. And pathParam <path_param_name> = <value>
10. And header header_name = "header_value"
11. And header header_name = integer_value
12. And header header_name = float_value
13. And header header_name = true|false
14. And header header-name = "header_value"
15. And header header-name = integer_value
16. And header header-name = float_value
17. And header header-name = true|false
18. And header Authorization = "authorization_type" token_variable
19. And header header-name = "string_value" variable_name
20. And upload file “path/to/your/file”
21. Given expected read(“Json_file_path”)
22. And request body :
     """
     values
     """
23. Given request read(Json_file_path)
24. * set request.<json_path> - This step sets new json values or updates existing json values.
25. * set request add - This step merges two json parts.
26. When method <method>
27. When method <method> path(“<path_parameter>”)
28. Then def <variable_name> = response.<Json_path>
29. Then def <variable_name> = response
30. * print <string_message> - This step is used to print a message directly without any variable substitution.
31. * print <string_message> <variable_name> - This step is used to print a message along with the value of a variable.
32. * print <variable_name> - This step is used to print the value of a variable directly.
33. * def <variable_name> = read(“<csv_file_path>”) - This step reads the csv file and stores the values as an json array inside a variable.
34. * def <variable_name> = read(“<excel_sheet_path>”) sheet “<sheet_name>” row(<row_index>) col(<column_index>)
35. * def <variable_name> = read excel sheet “<sheet_name>” row(<row_index>)
36. * def <variable_name> = read(“<excel_sheet_path>”) sheet “<sheet_name>” row(<row_index>)
37. * def <variable_name> = read excel sheet “<sheet_name>” row(<row_index>)
38. * def <variable_name> = read(“<excel_sheet_path>”) sheet “<sheet_name>” col(<row_index>)
39. * def <variable_name> = read excel sheet “<sheet_name>” col(<row_index>)
40. * def <variable_name> = read(“<excel_sheet_path>”) sheet “<sheet_name>”
41. * def <variable_name> = read excel sheet “<sheet_name>” col(<row_index>)
42. * def <variable_name> = read google spreadsheet-id “<spreadsheet-id>” sheet “<sheet_name>” col(“<column_name>”) row(<row_index>)
43. * def <variable_name> = read google spreadsheet-id “<spreadsheet-id>” sheet “<sheet_name>” col(<column_index>) row(<row_index>)
44. * def <variable_name> = read google sheet “<sheet_name>” col(<column_index>)
45. * def <variable_name> = read google sheet “<sheet_name>” col(“<column_name>”)
46. * def <variable_name> = read google spreadsheet-id “<spreadsheet-id>” sheet row(<row_index>)
47. * def <variable_name> = read google sheet “<sheet_name>” row(<row_index>)
48. * def <variable_name> = read google spreadsheet-id “<spreadsheet-id>” sheet “<sheet_name>” col(“<column_name>”)
49. * def <variable_name> = read google sheet “<sheet_name>” col(“<column_name>”)
50. * def <variable_name> = read google spreadsheet-id “<spreadsheet-id>” sheet “<sheet_name>”
51. * def <variable_name> = read google sheet “<sheet_name>”
52. And cookie cookieName = "string_value"
53. And cookie cookieName = integer_value
54. And cookie cookieName = boolean_value
55. And cookie cookieName = variable_value
56. And cookie cookieName = float_value
57. And cookie cookieName =
58. And store cookie "cookieName" as "variableName"
59. And basic auth username "username_value" and password "password_value"
60. And bearer token auth token "token_variable"
61. And oauth token auth token "token_variable"
62. And digest auth username "username_variable" and password "password_variable"
63. * set <variable_name>.<JSON_path> = <new_value>
64. * remove <variable_name>.<JSON_path>
65. * <variable_name> add
66. * set request.<JSON_path> = <new_value>
67. * remove request.<JSON_path>
68. And request add
69. And run (classPath:”<feature_file_path>”)
70. def <variable_name> = run (classPath:”<feature_file_path>”)
71. * def <variable_name> = run (classPath:”<classPath>”) (method:”<method_name>”)
72. And run until (“<file_path>”) response.<JSON_path> == <expected_value>
73. Then match response time < Milliseconds
